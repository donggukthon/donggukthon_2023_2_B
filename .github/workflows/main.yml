name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  spring-build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Make .yml

      run: |
        mkdir -p ./src/main/resources
        touch ./src/main/resources/application.yml
        echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
        cat ./src/main/resources/application.yml

        touch ./src/main/resources/application-oauth.yml
        echo "${{ secrets.APPLICATION_OAUTH }}" > ./src/main/resources/application-oauth.yml
        cat ./src/main/resources/application-oauth.yml

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build
      shell: bash 
      
    # - name: Build with Gradle
    #   run: ./gradlew build 
    
    - name: Docker hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

#    - name: Docker Compose Build and Push
#      run: |
#        docker-compose build
#        docker-compose push
#
#    - name: Deploy to Instance
#      uses: appleboy/ssh-action@v1.0.0
#      with:
#        host: ${{secrets.HOST}}
#        username: ${{secrets.USERNAME}}
#        key: ${{secrets.SSH_KEY}}
#        script: |
#          sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#          sudo docker-compose pull
#          sudo docker-compose up -d
        
        
    - name: Docker image build and push
      run: |
        docker build -t ${{secrets.DOCKERHUB_ID}}/donggukthon .
        docker push ${{ secrets.DOCKERHUB_ID }}/donggukthon

    - name: Deploy to Instance
      uses: appleboy/ssh-action@v1.0.0     #가장 최신 버젼 appleboy 사용
      with:
        host: ${{secrets.HOST}}
        username: ${{secrets.USERNAME}}
        key: ${{secrets.SSH_KEY}}
        script: |
          sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          sudo docker rm $(docker ps -a -q)
          sudo docker rmi ${{ secrets.DOCKERHUB_ID }}/donggukthon
          sudo docker pull ${{secrets.DOCKERHUB_ID}}/donggukthon
          docker-compose up -d
#          sudo docker rm -f $(docker ps -qa) 2>/dev/null || true
#          sudo docker image prune -f
#          sudo docker run -d -p 8080:8080 ${{secrets.DOCKERHUB_ID}}/donggukthon

